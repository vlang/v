import os

struct KeepAnyLanguagePrefixVariation {
	x  C.bar
	y  &C.bar
	z  []C.bar
	z2 []&C.bar
}

fn foo(a []os.File) {
}

struct User {
	age  int
	name string
}

fn handle_users(users []User) {
	println(users.len)
}

fn (u &User) foo(u2 &User) {
}

type Expr = IfExpr | IntegerLiteral

fn exprs(e []Expr) {
	println(e.len)
}

struct KeepStructEmbed {
	User
pub:
	a int
	b int
}

struct KeepMultiLineDefaultExprsIndent {
	buttons []PeriodButton = [PeriodButton{
		period: pr.Period.m1
		text:   'M1'
	}, PeriodButton{
		period: pr.Period.m5
		text:   'M5'
	}]
}

@[typedef]
pub struct C.some_t {
	@type int
	data  struct {}

}
