vlib/v/checker/tests/any_type_err.vv:3:16: error: cannot use type `any` here
    1 | // Any types should error, while parametrically polymorphic should not.
    2 | 
    3 | type AnyType = any
      |                ~~~
    4 | type AnySumType = any | string
    5 | type AnyPolySumType = T | any
vlib/v/checker/tests/any_type_err.vv:4:19: error: cannot use type `any` here
    2 | 
    3 | type AnyType = any
    4 | type AnySumType = any | string
      |                   ~~~
    5 | type AnyPolySumType = T | any
    6 |
vlib/v/checker/tests/any_type_err.vv:5:27: error: cannot use type `any` here
    3 | type AnyType = any
    4 | type AnySumType = any | string
    5 | type AnyPolySumType = T | any
      |                           ~~~
    6 | 
    7 | type PolyType = T
vlib/v/checker/tests/any_type_err.vv:11:6: error: cannot use type `any` here
    9 | 
   10 | struct AnyStructField[T] {
   11 |     foo any
      |         ~~~
   12 |     bar T
   13 | }
vlib/v/checker/tests/any_type_err.vv:16:7: error: cannot use type `any` here
   14 | 
   15 | fn any_cast() {
   16 |     _ := any('foo')
      |          ~~~~~~~~~~
   17 | }
