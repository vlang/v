vlib/v/checker/tests/fn_check_for_matching_option_result_in_fields.vv:2:2: notice: uninitialized `fn` struct fields are not allowed, since they can result in segfaults; use `?fn` or `@[required]` or initialize the field with `=` (if you absolutely want to have unsafe function pointers, use `= unsafe { nil }`)
    1 | struct Abc {
    2 |     f fn (voidptr)
      |     ~~~~~~~~~~~~~~
    3 | }
    4 |
vlib/v/checker/tests/fn_check_for_matching_option_result_in_fields.vv:7:3: error: cannot assign to field `f`: expected `fn (voidptr)`, not `fn (voidptr) ?`
    5 | fn main() {
    6 |     a := Abc{
    7 |         f: fn (data voidptr) ? {}
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~
    8 |     }
    9 |     println(a)
