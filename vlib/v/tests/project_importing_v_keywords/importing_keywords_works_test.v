import mymod { @as, @asm, @assert, @atomic, @break, @const, @continue, @defer, @else, @enum, @false, @fn, @for, @go, @goto, @if, @implements, @import, @in, @interface, @is, @isreftype, @lock, @match, @module, @mut, @or, @pub, @return, @rlock, @select, @shared, @sizeof, @spawn, @static, @struct, @true, @type, @typeof, @union, @unsafe, @volatile }

fn call_keywords() {
	@as()
	@asm()
	@assert()
	@atomic()
	@break()
	@const()
	@continue()
	@defer()
	@else()
	@enum()
	@false()
	@fn()
	@for()
	@go()
	@goto()
	@if()
	@implements()
	@import()
	@in()
	@interface()
	@is()
	@isreftype()
	@lock()
	@match()
	@module()
	@mut()
	@or()
	@pub()
	@return()
	@rlock()
	@select()
	@shared()
	@sizeof()
	@spawn()
	@static()
	@struct()
	@true()
	@type()
	@typeof()
	@union()
	@unsafe()
	@volatile()
}

fn test_main() {
	call_keywords()
	assert true
}
