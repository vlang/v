name: VPM CI

on:
  push:
    paths:
      - '**/vpm_ci.yml'
      - '**/cmd/tools/vpm/**'
  pull_request:
    paths:
      - '**/vpm_ci.yml'
      - '**/cmd/tools/vpm/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/master' && github.sha || github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-12]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          path: vlang
      - name: Build V
        if: runner.os != 'Windows'
        run: cd vlang && make -j4 && ./v doctor
      - name: Build V (Windows)
        if: runner.os == 'Windows'
        run: cd vlang && ./make.bat && ./v doctor
      - name: Cache V
        uses: actions/cache/save@v4
        with:
          path: vlang
          key: ${{ runner.os }}-${{ github.sha }}

  test:
    needs: setup
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            cc: tcc
          - os: ubuntu-20.04
            cc: gcc
          - os: ubuntu-20.04
            cc: clang
          - os: windows-2019
            cc: tcc
          - os: windows-2019
            cc: gcc
          - os: windows-2019
            cc: msvc
          - os: macos-12
            cc: clang
          - os: macos-14
            cc: clang
      fail-fast: false
    runs-on: ${{ matrix.os }}
    env:
      VFLAGS: -cc ${{ matrix.cc }} -d network
    steps:
      - name: Restore V cache
        uses: actions/cache/restore@v4
        with:
          path: vlang
          key: ${{ runner.os }}-${{ github.sha }}
      - name: Test
        run: cd vlang && ./v test cmd/tools/vpm
